<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fapsi.com</groupId>
	<artifactId>kemail</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>KEmail</name>
	<description>A Kindlet for viewing emails on the device.</description>
	<url>https://github.com/fapsi/kemail</url>

	<developers>
		<developer>
			<id>Fapsi</id>
			<email>fapsi@go4more.de</email>
			<url>https://github.com/fapsi/</url>
			<organization>Fapsi cooperation</organization>
			<organizationUrl></organizationUrl>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<kindleRootMountPoint>/home/fapsi/kindle/mnt.us.documents</kindleRootMountPoint>
		<downcompiledsuffix>J_1_4_downcompiled</downcompiledsuffix>
		<!-- ${user.home}/kindle/mnt.us.documents -->
	</properties>

	<repositories>
		<repository>
			<id>kindletjailbreaks</id>
			<name>JailbreakRepository</name>
			<url>file://${project.basedir}/lib/kindletjailbreaks</url>
		</repository>
		<repository>
			<id>mailprovider</id>
			<name>MstorRepository</name>
			<url>file://${project.basedir}/lib/mailprovider</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Section: Amazon-dependencies [Note: System-scope] -->
		<dependency>
			<groupId>com.amazon</groupId>
			<artifactId>kindle</artifactId>
			<version>2.2</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/Kindlet-2.2.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.amazon</groupId>
			<artifactId>booklet</artifactId>
			<version>2.2</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/KindletBooklet-2.2.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.amazon</groupId>
			<artifactId>kindleImpl</artifactId>
			<version>2.2</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/KindletImplementation-2.2.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.amazon</groupId>
			<artifactId>kaf</artifactId>
			<version>032.215573</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/kaf.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.amazon</groupId>
			<artifactId>kafui</artifactId>
			<version>032.215573</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/kafui.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.amazon</groupId>
			<artifactId>utilities</artifactId>
			<version>032.215573</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/utilities.jar</systemPath>
		</dependency>
		<!-- Section: Jailbreak -->
		<dependency>
			<groupId>ixtab</groupId>
			<artifactId>jailbreak</artifactId>
			<version>2011051901</version>
		</dependency>
		<!-- Section: Mail-components -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>org.mnode.mstor</groupId>
			<artifactId>mstor</artifactId>
			<version>0.9.11</version>
		</dependency>
		<!-- Section: Mstor-dependencies [TODO: maybe more] -->
		<dependency>
			<groupId>jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1</version>
		</dependency>
		<!-- Section: maybe necessary -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-jdk14</artifactId> 
			<version>1.7.5</version> </dependency> -->
		<dependency>
			<groupId>net.sourceforge.retroweaver</groupId>
			<artifactId>retroweaver-rt</artifactId>
			<version>2.0.7</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.4</target>
				</configuration>
			</plugin>
			<!-- Create amazon compatible kindlet -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<excludePomFiles>true</excludePomFiles>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<Main-Class>de.fapsi.kemail.KindletEMail</Main-Class>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Title>KEmail</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Implementation-Vendor>Fapsi</Implementation-Vendor>
							<Implementation-URL>https://github.com/fapsi/kemail</Implementation-URL>

							<Extension-List>SDK</Extension-List>
							<SDK-Extension-Name>com.amazon.kindle.kindlet</SDK-Extension-Name>
							<SDK-Specification-Version>2.2</SDK-Specification-Version>

							<Amazon-Cover-Image>main/resources/kemail.png</Amazon-Cover-Image>

							<Font-Size-Mode>point</Font-Size-Mode>
							<Toolbar-Mode>full</Toolbar-Mode>
							<Toolbar-Style>default-chrome-style</Toolbar-Style>
						</manifestEntries>
						<!-- 
						<Toolbar-Style>default-chrome-style</Toolbar-Style>
							<Toolbar-Mode>transient</Toolbar-Mode>-->
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- This is a plugin, which allowes to compile a Java 1.5 created file 
				into a .jar which is executable with Java 1.4 using retroweaver. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeProjectDependencies>false</includeProjectDependencies>
					<includePluginDependencies>true</includePluginDependencies>
					<mainClass>net.sourceforge.retroweaver.Weaver</mainClass>
					<arguments>
						<argument>-jar</argument>
						<argument>${project.build.directory}/${project.build.finalName}.jar</argument>
						<argument>${project.build.directory}/${project.build.finalName}${downcompiledsuffix}.jar</argument>
					</arguments>
				</configuration>

				<!-- verifyrefs? <argument>-verifyrefs</argument> classpath <argument>retroweaver-rt-2.0.7.jar;</argument> 
					See for usage of retroweaver argument -help instead -jar (Note build fails then) -->
				<dependencies>
					<dependency>
						<groupId>net.sourceforge.retroweaver</groupId>
						<artifactId>retroweaver</artifactId>
						<version>2.0.7</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.retroweaver</groupId>
						<artifactId>retroweaver-rt</artifactId>
						<version>2.0.7</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- This plugin signs the .jar with a special developer key. -->
			<plugin>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.2</version>
				<configuration>
					<archive>${project.build.directory}/${project.build.finalName}${downcompiledsuffix}.jar</archive>
					<keystore>${project.basedir}/lib/developer.keystore</keystore>
					<storepass>password</storepass>
					<keypass>password</keypass>
				</configuration>
				<executions>
					<execution>
						<id>sign-dk</id>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<alias>dktest</alias>
						</configuration>
					</execution>
					<execution>
						<id>sign-di</id>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<alias>ditest</alias>
						</configuration>
					</execution>
					<execution>
						<id>sign-dn</id>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<alias>dntest</alias>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- This plugin removes the old version of kemail, renames and copies 
				the new version to the kindle -->
			<!-- Note: The kindle has to be mounted over sshfs or as usb-storage. -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>remove-artifact-on-kindle</id>
						<phase>clean</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete
									file="${kindleRootMountPoint}/${project.build.finalName}.azw2" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>copy-artifact-to-kindle</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<move
									file="${project.build.directory}/${project.build.finalName}${downcompiledsuffix}.jar"
									tofile="${project.build.directory}/${project.build.finalName}.azw2" />
								<copy
									file="${project.build.directory}/${project.build.finalName}.azw2"
									todir="${kindleRootMountPoint}/" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>